从PHP5开始，PHP支持异常处理，异常处理是面向对象一个重要特性，PHP代码中的异常通过throw抛出，异常抛出之后，后面的代码将不会再被执行。

既然抛出异常会中断程序执行，那么为什么还需要使用异常处理？

异常抛出被用于在遇到未知错误，或者不符合预先设定的条件时，通知客户程序，以便进行其他相关处理，不至于使程序直接报错中断。

当代码中使用了try catch的时候，抛出的异常会在catch中捕获，否则会直接中断。



1、基本语法
        try{
            //可能出现错误或异常的代码
            //catch表示捕获，Exception是php已定义好的异常类
        } catch(Exception $e){
            //对异常处理，方法：
                //1、自己处理
                //2、不处理，将其再次抛出
        }
2、处理处理程序应当包括：
Try - 使用异常的函数应该位于 "try"  代码块内。如果没有触发异常，则代码将照常继续执行。但是如果异常被触发，会抛出一个异常。
Throw - 这里规定如何触发异常。注意：每一个 "throw" 必须对应至少一个 "catch"，当然可以对应多个"catch"
Catch - "catch" 代码块会捕获异常，并创建一个包含异常信息的对象。